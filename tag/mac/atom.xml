<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
   
   	<title>ianwootten.co.uk - Tag: mac</title>
   
   <link>http://ianwootten.co.uk</link>
   <description>I'm a Web Developer  working at <a href="http://niftydigits.com">Nifty Digits</a> in Cardiff, UK. Here, I enjoy talking code - mostly javascript. I'm <a href="http://twitter.com/iwootten">@iwootten</a> on twitter.</description>
   <language>en-us</language>
   <managingEditor>I.M.Wootten</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />

    
	  <item>
        <title>Recovering Images from SD Cards with PhotoRec</title>
        <link>http://ianwootten.co.uk/2012/09/04/recovering-images-from-sd-cards-with-photorec</link>
		<author>I.M.Wootten<</author>
		<pubDate>2012-09-04T00:00:00+01:00</pubDate>
		<guid>http://ianwootten.co.uk/2012/09/04/recovering-images-from-sd-cards-with-photorec</guid>
		<description><![CDATA[
		   <p>I had the horrible situation last Sunday following removing a number of pictures using an SD reader from my SD card that when I inserted it in my camera, it registered nothing upon it. My heart sunk, because this card is stuffed full of images of me and my family (along with my 1 year old son growing up) and I was unsure of which ones I’d actually backed up. After perusing the hidden files on the card, all I could discover was the files I’d most recently transferred from the card….great…</p>

<p>Partly this was my own fault – I’d already experienced problems with the reader in question when trying to write images for my <a href="http://raspberrypi.org">Raspberry Pi</a> and shouldn’t have used it for transferring images I care about. The card in question is a uber cheapo <a href="http://www.amazon.co.uk/Integral-USB-Single-Slot-Reader/dp/B000VY80AM/ref=sr_1_1?ie=UTF8&#038;qid=1346533453&#038;sr=8-1">Integral USB 2.0</a>. Despite what the amazon reviews say, steer well clear of it – this has been a pain from day one, with intermittent transfer problems which triggered this situation.</p>

<p>After a little more digging, I came across <a href="http://www.cgsecurity.org/wiki/PhotoRec">Photorec</a>, a commandline utility which seemed like it would hopefully help recover some of the images. I attempted to use it with my card reader, but given it’s credentials I’ve given above, found the scanning process would cut out and couldn’t get through the whole card. At this point the card was being reported empty….great…Given the way PhotoRec works, I understood it would still be possible to extract the images despite this. I decided to order another reader and hold fire until it had arrived – this time I opted for a <a href="http://www.amazon.co.uk/Kingston-Technology-Multi-Card-Reader/dp/B007PFQ0PC/">Kingston USB 3.0</a> (which I haven’t had any such problems with so far).</p>

<h2 id="the-solution">The Solution</h2>

<p>Here are the steps I followed after receiving my new sd reader to recover images from the card using PhotoRec. I’m listing them for anyone else who may have the same horrendous stomach wrenching problem I did last Sunday. It seems to have worked pretty well, with only 1 movie file coming out corrupted and about 500 images recovered.</p>

<p>Firstly, I wanted to take a copy of the card as it currently stood following my investigation. For this I used df, diskutil and ddrescue.</p>

<p>To determine where the card is currently mounted (look for the one that’s about the right size):</p>

<pre class="bash">df -h
</pre>

<p>To unmount the card so we can fiddle with it:</p>

<pre class="bash">sudo diskutil unmount /dev/disk1s1
</pre>

<p>To backup the card to a disk image on your macbook:</p>

<pre class="bash">sudo ddrescue /dev/disk1s1 ./sdbackup/image.img backuplog
</pre>

<p>Finally, using PhotoRec scan the disk image that was just created. My image was FAT formatted I scanned the whole thing rather than just unallocated blocks.</p>

<pre class="bash">sudo ./photorec ~/sdbackup/image.img
</pre>

<p>The final piece of this saga was to rename all the files PhotoRec created so they were in folders according to their exif data. My photos are all in folders like “2012_06_30″, so to have 500 files named “f0677440.jpg”, “f0688768.jpg” in a random PhotoRec directory would be pretty annoying. I had looked at setting up an automator task for this, but I ended up using <a href="http://www.petrosit.de/index.php/apps/12-pexiftool">PexifTool</a> for simplicities sake (I’m sure there are other alternatives). I believe if you go the Automator route, you may well have to install plugins in order to be able to extract exif data from files.</p>


		]]></description>
	  </item>
    
  </channel>
</rss>