<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>node on Ian Wootten</title>
    <link>https://www.ianwootten.co.uk/tags/node/</link>
    <description>Recent content in node on Ian Wootten</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Jul 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ianwootten.co.uk/tags/node/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maintaining References to Sockets with Express and Socket.io</title>
      <link>https://www.ianwootten.co.uk/2011/07/04/maintaining-references-to-sockets-with-express-and-socket.io/</link>
      <pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.ianwootten.co.uk/2011/07/04/maintaining-references-to-sockets-with-express-and-socket.io/</guid>
      <description>I hit a frustrating problem when trying to use expressjs alongside socket.io recently. The solution may seem somewhat trivial, but I struggled with it for a while, until finally asking for help on the socket.io irc channel. I’m not sure if a better solution exists for my case, but this is what I have for now.
In the main route of my express app, I needed to iterate across an array, performing a REST call using each element as a parameter and spit the results back for socket.</description>
    </item>
    
    <item>
      <title>Blog rolling with CouchDB, Express and Node.js</title>
      <link>https://www.ianwootten.co.uk/2011/02/07/blog-rolling-with-couchdb-express-and-node-js/</link>
      <pubDate>Mon, 07 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://www.ianwootten.co.uk/2011/02/07/blog-rolling-with-couchdb-express-and-node-js/</guid>
      <description>Over the last little while, I’ve been doing a lot of playing with Node.js, mostly to run data collection scripts. Last week, I started following Ciaran Jessup’s tutorial on getting started with node.js, Express and mongoDB. Express acts as a framework to node.js, allowing you to work in a familiar mvc format in a not so familar server side language. I hit a few problems along the way in the tutorial, so I thought I’ve list a few of my findings here.</description>
    </item>
    
  </channel>
</rss>
